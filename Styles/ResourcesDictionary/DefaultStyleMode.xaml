<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp" xmlns:sys="clr-namespace:System;assembly=netstandard">
    <!--Главный Border-->
    <Style x:Key="MainBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource primaryBackColorDefault}"/>
        <Setter Property="CornerRadius" Value="10,10,0,0"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor1Default}"/>
    </Style>

    <!--#region Общий Grid (Header)-->
    <!--Border-->
    <Style x:Key="GridHeaderBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BorderColor1Default}"/>
        <Setter Property="CornerRadius" Value="8,8,0,0"/>
    </Style>

    <!--Панель наименования программы-->
    <Style x:Key="StackPanelHeaderNameProgramm" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBlockNameProgramm" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="FontFamily" Value="Andika"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Панель кнопок управления окном (Закрыть, свернуть и т.д.)-->
    <Style x:Key="StackPanelHeaderControl" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--Переключатель стилей приложения-->
    <Style x:Key="ToggleButtonChangeThemes" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Viewbox>

                        <Border     x:Name="Border" CornerRadius="10"
                                    Background="{StaticResource mainFontColorDark}"
                                    Width="40" Height="20">

                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                            </Border.Effect>

                            <Ellipse    x:Name="Ellipse" Fill="{StaticResource mainFontColorDark}" Stretch="Uniform"
                                        Margin="2 1 2 1"
                                        Stroke="Gray" StrokeThickness="0.2"
                                        HorizontalAlignment="Stretch">

                                <Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                </Ellipse.Effect>

                            </Ellipse>
                        </Border>

                    </Viewbox>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding IsCheckedStyleMode, UpdateSourceTrigger=PropertyChanged}" Value="True">

                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#FF4CD661"
                                                        Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="20 1 2 1"
                                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <ColorAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                         To="#CFDAEC"
                                                         Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="2 1 2 1"
                                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>

                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Кнопка сворачивания приложения в трэй-->
    <Style x:Key="buttonCloseApp" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border Background="{TemplateBinding Background}"
                            Width="30" 
                            Height="30"
                            CornerRadius="0,10,0,0">

                        <fa:IconImage   Icon="X"
                                        Foreground="{StaticResource mainFontColorDefault}"
                                        Width="15" 
                                        Height="15"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region Общий Grid (Body)-->
    <!--Body-->
    <!--Отображение счетчиков на главном окне (ListView)-->
    <Style x:Key="MainListViewCounter" TargetType="ListView">
        <Setter Property="ItemsSource" Value="{Binding MainDataModels, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="SelectedItem" Value="{Binding SelectedMainDataModels}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ListViewItemStyle}"/>
    </Style>

    <!--Шаблон контейнера ListView-->
    <DataTemplate x:Key="DefaultTemplateItem">
        <Border x:Name="borderItem"
                Style="{DynamicResource ItemMainBorder}"
                Height="200"
                Width="250"
                Margin="5">

            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="15"/>
                </Grid.RowDefinitions>

                <!--Header-->
                <Grid Grid.Row="0">

                    <!--Индикатор связи со счетчиком-->
                    <Border Style="{DynamicResource ItemCheckConnectStyle}"
                            Margin="15,0,0,0"
                            Height="15"
                            Width="15"/>

                    <!--Наименование счётчика-->
                    <TextBlock Text="{Binding DescriptionCounter}"
                               Style="{DynamicResource ItemNameCounter}"/>

                </Grid>

                <!--Body-->
                <Grid Grid.Row="1">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--#region Прорисовка стрелок (прямая и обратная)-->
                    <!--Отрисовка стрелы вправо-->
                    <Grid   Grid.Row="0"
                        VerticalAlignment="Top">

                        <Polygon Fill="#D35A5A" Points="10, 25, 28, 33, 10, 41"
                             StrokeThickness="1"
                             Stroke="Black"/>

                        <Polygon Fill="#D35A5A" Points="220, 25, 238, 33, 220, 41"
                             StrokeThickness="1"
                             Stroke="Black"/>

                        <Border Background="#D35A5A" 
                            Height="6"
                            Width="207"
                            BorderThickness="0,1,0,1"
                            BorderBrush="Black"
                            Margin="0,25,5,0"/>

                    </Grid>
                    <!--Отрисовка стрелы влево-->
                    <Grid   Grid.Row="1"
                        VerticalAlignment="Top">

                        <Polygon Fill="#71A05A" Points="10, 33, 28, 25, 28, 41"
                             StrokeThickness="1"
                             Stroke="Black"/>

                        <Polygon Fill="#71A05A" Points="220, 33, 238, 25, 238, 41"
                             StrokeThickness="1"
                             Stroke="Black"/>

                        <Border Background="#71A05A" 
                            Height="6"
                            Width="207"
                            BorderThickness="0,1,0,1"
                            BorderBrush="Black"
                            Margin="15,25,5,0"/>

                    </Grid>
                    <!--#endregion-->

                    <!--Верхняя панель показаний-->
                    <StackPanel Grid.Row="0"
                            Orientation="Horizontal"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">

                        <StackPanel Style="{DynamicResource ItemChanelStackPanel}"
                                    Margin="0,0,15,0">

                            <TextBlock  Text="P1"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                            <!--Кнопка показания значения Давления-->
                            <Button Height="30"
                                    Width="50"
                                    Margin="0"
                                    Style="{DynamicResource ItemChanelButton}"
                                    Command="{Binding DataContext.OpenCurrentP1GraphCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                <!--Шаблон кнопки показания занчения-->
                                <Button.Content>

                                    <TextBlock  Text="{Binding Pressure_ch1}"
                                                Style="{DynamicResource ItemContentButtonStyle}"/>

                                </Button.Content>

                            </Button>

                            <TextBlock  Text="МПа"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                        </StackPanel>
                        <StackPanel Style="{DynamicResource ItemChanelStackPanel}"
                                    Margin="0,0,15,0">

                            <TextBlock  Text="T1"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                            <!--Кнопка показания значения Температуры-->
                            <Button Height="30"
                                    Width="50"
                                    Margin="0"
                                    Style="{DynamicResource ItemChanelButton}"
                                    Command="{Binding DataContext.OpenCurrentT1GraphCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                <!--Шаблон кнопки показания занчения-->
                                <Button.Content>

                                    <TextBlock  Text="{Binding Temperature_ch1}"
                                                Style="{DynamicResource ItemContentButtonStyle}"/>

                                </Button.Content>

                            </Button>

                            <TextBlock  Text="&#176;C"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                        </StackPanel>
                        <StackPanel Style="{DynamicResource ItemChanelStackPanel}">

                            <TextBlock  Text="F1"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                            <!--Кнопка показания значения Расхода-->
                            <Button Height="30"
                                    Width="50"
                                    Margin="0"
                                    Style="{DynamicResource ItemChanelButton}"
                                    Command="{Binding DataContext.OpenCurrentF1GraphCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                <!--Шаблон кнопки показания занчения-->
                                <Button.Content>

                                    <TextBlock  Text="{Binding Flow_ch1}"
                                                Style="{DynamicResource ItemContentButtonStyle}"/>

                                </Button.Content>

                            </Button>

                            <TextBlock  Text="т/ч"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                        </StackPanel>

                    </StackPanel>

                    <!--Нижняя панель показаний-->
                    <StackPanel Grid.Row="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">

                        <StackPanel Style="{DynamicResource ItemChanelStackPanel}" 
                                    Margin="0,0,15,0">

                            <TextBlock  Text="P2"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                            <!--Кнопка показания значения Давления-2-->
                            <Button Height="30"
                                    Width="50"
                                    Margin="0"
                                    Style="{DynamicResource ItemChanelButton}"
                                    Command="{Binding DataContext.OpenCurrentP2GraphCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                <!--Шаблон кнопки показания занчения-->
                                <Button.Content>

                                    <TextBlock  Text="{Binding Pressure_ch2}"
                                                Style="{DynamicResource ItemContentButtonStyle}"/>

                                </Button.Content>

                            </Button>

                            <TextBlock  Text="МПа"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                        </StackPanel>
                        <StackPanel Style="{DynamicResource ItemChanelStackPanel}" 
                                    Margin="0,0,15,0">

                            <TextBlock  Text="T2"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                            <!--Кнопка показания значения Температуры-2-->
                            <Button Height="30"
                                    Width="50"
                                    Margin="0"
                                    Style="{DynamicResource ItemChanelButton}"
                                    Command="{Binding DataContext.OpenCurrentT2GraphCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                <!--Шаблон кнопки показания занчения-->
                                <Button.Content>

                                    <TextBlock  Text="{Binding Temperature_ch2}"
                                                Style="{DynamicResource ItemContentButtonStyle}"/>

                                </Button.Content>

                            </Button>

                            <TextBlock  Text="&#176;C"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                        </StackPanel>

                        <StackPanel Style="{DynamicResource ItemChanelStackPanel}">

                            <TextBlock  Text="F2"
                                        Style="{DynamicResource ItemNameChanelTextBlock}"/>

                            <!--Кнопка показания значения Расхода-2-->
                            <Button Height="30"
                                    Width="50"
                                    Margin="0"
                                    Style="{DynamicResource ItemChanelButton}"
                                    Command="{Binding DataContext.OpenCurrentF2GraphCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">

                                <!--Шаблон кнопки показания занчения-->
                                <Button.Content>

                                    <TextBlock  Text="{Binding Flow_ch2}"
                                                Style="{DynamicResource ItemContentButtonStyle}"/>

                                </Button.Content>

                            </Button>

                            <TextBlock Text="т/ч"
                                       Style="{DynamicResource ItemNameChanelTextBlock}"/>

                        </StackPanel>

                    </StackPanel>

                </Grid>

                <!--Footer-->
                <Grid Grid.Row="2">

                    <!--Заводской номер счётчика-->
                    <StackPanel Style="{DynamicResource ItemSerialNumberStackPanel}">

                        <TextBlock Text="СНТ-2 Зав.№: "
                                   Style="{DynamicResource ItemSerialNumberTextBlock}"/>

                        <TextBlock Text="{Binding NumberCounter}"
                                   Style="{DynamicResource ItemSerialNumberTextBlock}"/>

                    </StackPanel>

                </Grid>

            </Grid>

        </Border>
    </DataTemplate>
    <!--Стиль контейнера ListView-->
    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource DefaultTemplateItem}"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Focusable" Value="False"/>-->

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--Не работает-->
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="IsSelected" Value="True"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="Focusable" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>    
    <!--#region Стили элементов шаблона контейнера ListView-->
    <!--Основной BorderItem-->
    <Style x:Key="ItemMainBorder" TargetType="Border">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor1Default}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,1" EndPoint="1,0">
                    <GradientStop Color="{StaticResource gradientBackColor1Default}" Offset="0"/>
                    <GradientStop Color="{StaticResource gradientBackColor2Default}" Offset="0.40"/>
                    <GradientStop Color="{StaticResource gradientBackColor2Default}" Offset="0.60"/>
                    <GradientStop Color="{StaticResource gradientBackColor1Default}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
        
    <!--#region HeaderItem-->
    <!--Индикатор связи со счетчиком-->
    <Style x:Key="ItemCheckConnectStyle" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{StaticResource color2Default}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor1Default}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CheckErrorConection, UpdateSourceTrigger=PropertyChanged}" Value="False">
                <Setter Property="Background" Value="{StaticResource color4Default}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--Наименование счётчика-->
    <Style x:Key="ItemNameCounter" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Andika"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource secondFontColorDefault}"/>
    </Style>
    <!--#endregion-->
    
    <!--#region BodyItem-->
    <Style x:Key="ItemChanelStackPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--Текстовое поле обозначения канала и его единицы измерения-->
    <Style x:Key="ItemNameChanelTextBlock" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Andika"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource blackFontColorDefault}"/>
    </Style>
    <!--Кнопка показания значения Расхода-->
    <Style x:Key="ItemChanelButton" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource buttonActiveColorDefault}"/>
        <Setter Property="Background" Value="{StaticResource color5Default}"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border x:Name="BorderContent"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5">

                        <ContentPresenter   Name="ContentPresenter"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"
                            Margin="0,0,0,0"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color5Default}"/>
                <Setter Property="BorderBrush" Value="{StaticResource color3Default}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0"></DropShadowEffect>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource color6Default}"/>
                <Setter Property="BorderBrush" Value="{StaticResource color3Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Шаблон кнопки показания занчения-->
    <Style x:Key="ItemContentButtonStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <!--#endregion-->    
    
    <!--#region FooterItem-->
    <!--Заводской номер счётчика-->
    <Style x:Key="ItemSerialNumberStackPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ItemSerialNumberTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Andika"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource secondFontColorDefault}"/>
    </Style>
    <!--#endregion-->

    <!--#endregion-->

    <!--Скрытая панель дополнительных функциональных кнопок-->
    <Style x:Key="HiddenControlPanel" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>
        <Setter Property="CornerRadius" Value="10,0,0,0"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>

            <DataTrigger Binding="{Binding CheckActivetedHideMenu, UpdateSourceTrigger=PropertyChanged}">

                <DataTrigger.Value>
                    <sys:Boolean>True</sys:Boolean>
                </DataTrigger.Value>

                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation    
                                To="0" 
                                Duration="0:0:0.25"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.25"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>

            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--Стиль кнопок в скрытом меню-->
    <Style x:Key="ButtonsHiddenControlPanel" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>
        <Setter Property="Margin" Value="10,0,0,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="BorderButton"
                        Background="{TemplateBinding Background}"                                                            
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0">

                        <ContentPresenter   Name="ContentPresenter"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="0,0,0,0"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelOverColorDefault}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource panelOverColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Кнопка раскрытия панели дополнительных функциональных кнопок (доп.меню)(Распакоука на хуй)-->
    <Style x:Key="ButtonActivatedHiddenMenu" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor1Default}"/>
        <Setter Property="Visibility" Value="Visible"/>

        <!--Шаблон кнопки раскрытия доп.меню-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="BorderButton"
                        Background="{TemplateBinding Background}"                                                            
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5,0,0,0">

                        <ContentPresenter Name="ContentPresenter"
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"
                                      Margin="2,2,0,0"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CheckActivetedHideMenu, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter TargetName="BorderButton" Property="CornerRadius" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonOverColorDefault}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonActiveColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Шаблон иконки внутри кнопки-->
    <Style x:Key="TemplateIconButtonHiddenControl" TargetType="fa:IconImage">
        <Setter Property="Icon" Value="ArrowAltCircleLeft"/>
        <Setter Property="Foreground" Value="{StaticResource color5Default}"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding CheckActivetedHideMenu, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Icon" Value="ArrowAltCircleRight"/>
                <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region Стиль окна текущего графика-->
    <!--Главный Border-->
    <Style x:Key="MainBorderCurrentGraph" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource primaryBackColorDefault}"/>
        <Setter Property="CornerRadius" Value="10,10,0,10"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor1Default}"/>
    </Style>
    <!--Кнопка закрытия окна графика текущих данных-->
    <Style x:Key="buttonCloseAppCurrentGraph" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                            Width="30" 
                            Height="30"
                            CornerRadius="0,10,0,0">

                        <fa:IconImage   x:Name="iconImageClose"
                                        Icon="X"
                                        Foreground="{StaticResource mainFontColorDefault}"
                                        Width="15" 
                                        Height="15"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color1Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Панель кнопок управления окном (Закрыть, свернуть и т.д.)-->
    <Style x:Key="StackPanelHeaderControlCurrentGraph" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,2"/>
    </Style>
    <!--#endregion-->
    
    <!--#region Стиль окна архивных графиков-->
    <!--Кнопка закрытия окна-->
    <Style x:Key="buttonCloseArchiveGraph" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                            Width="30" 
                            Height="30"
                            CornerRadius="0,10,0,0">

                        <fa:IconImage   Icon="X"
                                        Foreground="{StaticResource mainFontColorDefault}"
                                        Width="15" 
                                        Height="15"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color1Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Стиль кнопки максимизации размера окна-->
    <Style x:Key="buttonMaximizeArchiveGraph" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                            Width="30" 
                            Height="30"
                            CornerRadius="0,0,0,0">

                        <fa:IconImage   Icon="WindowMaximize"
                                        Foreground="{StaticResource mainFontColorDefault}"
                                        Width="15" 
                                        Height="15"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>    
    <!--Стиль кнопки минимизации размера окна-->
    <Style x:Key="buttonMinimizeArchiveGraph" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                            Width="30" 
                            Height="30"
                            CornerRadius="10,0,0,0">

                        <fa:IconImage   Icon="WindowMinimize"
                                        Foreground="{StaticResource mainFontColorDefault}"
                                        Width="15" 
                                        Height="15"
                                        VerticalAlignment="Bottom"
                                        Margin="0,0,0,8"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>    
    
    <!--#endregion-->
    
    <!--#region Стиль окна настроек-->
    <!--Кнопка закрытия окна-->
    <Style x:Key="buttonCloseSettings" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                        Width="30" 
                        Height="30"
                        CornerRadius="0,10,0,0">

                        <fa:IconImage   Icon="X"
                                    Foreground="{StaticResource mainFontColorDefault}"
                                    Width="15" 
                                    Height="15"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color1Default}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Стиль кнопки максимизации размера окна-->
    <Style x:Key="buttonMaximizeSettings" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                        Width="30" 
                        Height="30"
                        CornerRadius="0,0,0,0">

                        <fa:IconImage   Icon="WindowMaximize"
                                    Foreground="{StaticResource mainFontColorDefault}"
                                    Width="15" 
                                    Height="15"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Стиль кнопки минимизации размера окна-->
    <Style x:Key="buttonMinimizeSettings" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="{TemplateBinding Background}"
                        Width="30" 
                        Height="30"
                        CornerRadius="10,0,0,0">

                        <fa:IconImage   Icon="WindowMinimize"
                                    Foreground="{StaticResource mainFontColorDefault}"
                                    Width="15" 
                                    Height="15"
                                    VerticalAlignment="Bottom"
                                    Margin="0,0,0,8"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColorDefault}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#region СТИЛЬ БОКОВОГО МЕНЮ-->    
    <!--Меню кнопок-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Стиль кнопки в покое-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource secondFontColorDefault}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="BorderRadioButton"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        BorderBrush="{TemplateBinding BorderBrush}">

                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource panelActiveColorDefault}"/>
                            <Setter TargetName="BorderRadioButton" Property="CornerRadius" Value="5,0,0,5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource panelColorDefault}"/>
                            <Setter Property="Tag" Value="{StaticResource buttonColorDark}"/>
                            <Setter TargetName="BorderRadioButton" Property="CornerRadius" Value="5,0,0,5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Стиль кнопки при наведении-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource mainFontColorDefault}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--Стиль кнопки при активации-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource buttonColorDark}"/>
                <!--<Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль иконки кнопки меню-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>

    <!--Стиль текста кнопки меню-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Стиль миниграницы кнопки меню-->
    <Style x:Key="menuButtonMiniBorder" TargetType="Border">
        <Setter Property="Width" Value="5"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="5,0,30,0"/>
        <Setter Property="Background" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
    </Style>
    <!--#endregion-->
    
    <!--#region СТИЛЬ ФРЭЙМА НАСТРОЙКИ COM-ПОРТА-->    
    <!--Стиль TextBlock №1-->
    <Style x:Key="TextBlockSettingStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource secondaryBackColorDefault}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource mainFontColorDefault}"/>
        <Setter Property="Padding" Value="4 2.9"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Foreground" Value="{DynamicResource mainFontColorDefault}"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="txtBorder"
                    Background="{TemplateBinding Background}"
                    CornerRadius="5"
                    MaxHeight="{TemplateBinding MaxHeight}"
                    MaxWidth="{TemplateBinding MaxWidth}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    SnapsToDevicePixels="True">

                        <Grid Margin="{TemplateBinding Padding}">

                            <ScrollViewer x:Name="PART_ContentHost"
                          Focusable="False"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Margin="-2 3"/>
                            <Label x:Name="WaterMarkerLabel"
                           Content="{TemplateBinding Tag}"
                           FontWeight="{TemplateBinding FontWeight}"
                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                           Visibility="Collapsed"
                           Foreground="{TemplateBinding Foreground}"
                           Padding="{TemplateBinding Padding}"/>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                            TargetName="WaterMarkerLabel"
                            Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль TextBox №1 ПОЛЕ ВВОДА-->
    <Style x:Key="TextBoxSettingStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource secondaryBackColorDefault}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource mainFontColorDefault}"/>
        <Setter Property="Padding" Value="5.2 3"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" Value="{DynamicResource color5Dark}"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="txtBorder"
                     Background="{TemplateBinding Background}"
                     CornerRadius="5"
                     MaxHeight="{TemplateBinding MaxHeight}"
                     MaxWidth="{TemplateBinding MaxWidth}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">

                            <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="-2 3"/>
                            <Label x:Name="WaterMarkerLabel"
                               Content="{TemplateBinding Tag}"
                               FontWeight="{TemplateBinding FontWeight}"
                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                               Visibility="Collapsed"
                               Foreground="#807e7e"
                               Padding="{TemplateBinding Padding}"/>

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                TargetName="WaterMarkerLabel"
                                Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                Value="{DynamicResource activeSecondaryBackColorDefault}"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush"
                                Value="{DynamicResource color5Dark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль кнопки "Сохранить"-->
    <Style x:Key="ButtonOkSettingStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="5.2 3"/>
        <Setter Property="Background" Value="{StaticResource buttonOverColorDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource color3Default}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BorderButton"
                                Background="{TemplateBinding Background}"
                                BorderThickness="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="5"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource buttonActiveColorDefault}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource color3Default}"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0.5"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Стиль кнопки при наведении-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource color3Default}"/>
            </Trigger>
            <!--Стиль кнопки при активации-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource secondFontColorDefault}"/>
                <Setter Property="BorderBrush" Value="{StaticResource panelActiveColorDefault}"/>

            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Стиль кнопки "Отмена"-->
    <Style x:Key="ButtonCancelSettingStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="5.2 3"/>
        <Setter Property="Background" Value="{StaticResource buttonOverColorDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource mainFontColorDefault}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource color1Default}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BorderButton"
                        Background="{TemplateBinding Background}"
                        BorderThickness="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="5"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        SnapsToDevicePixels="True">

                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource buttonActiveColorDefault}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource color1Default}"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0.5"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Стиль кнопки при наведении-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource color1Default}"/>
            </Trigger>
            <!--Стиль кнопки при активации-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource secondFontColorDefault}"/>
                <Setter Property="BorderBrush" Value="{StaticResource panelActiveColorDefault}"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region СТИЛЬ ФРЭЙМА НАСТРОЕК КАНАЛОВ-->
    <!--Стиль TabControl-->
    <Style x:Key="TabControllSetting" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{StaticResource primaryBackColorDefault}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor1Default}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource TabItemSetting}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">

                    <Grid ClipToBounds="True" 
                          SnapsToDevicePixels="True" 
                          KeyboardNavigation.TabNavigation="Local">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <Border x:Name="HeaderBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="10"
                                    Background="{StaticResource mainFontColorDefault}"
                                    Margin="5">
                            <TabPanel IsItemsHost="True"
                                          Name="HeaderPanel"
                                          Panel.ZIndex="1"
                                          KeyboardNavigation.TabIndex="1"
                                          Grid.Column="0"
                                          Grid.Row="0"
                                          Margin="5"/>
                        </Border>

                        <Grid Name="ContentPanel"
                              KeyboardNavigation.TabIndex="2"
                              KeyboardNavigation.TabNavigation="Local"
                              KeyboardNavigation.DirectionalNavigation="Contained"
                              Grid.Column="0"
                              Grid.Row="1">

                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"
                                    Margin="5 0">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                  ContentSource="SelectedContent"
                                                  Name="PART_SelectedContentHost"
                                                  Margin="-1 0"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,5,0,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,0,5,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Стиль TabItem-->
    <Style x:Key="TabItemSetting" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="1" 
                                BorderBrush="{StaticResource BorderColor1Default}" 
                                CornerRadius="7"
                                Margin="0 2"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter ContentSource="Header" 
                                              Margin="5"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="#063b59" />
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="#063b59" />
                            <Setter Property="Background" Value="{StaticResource buttonColorDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonColorDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#endregion-->
    
</ResourceDictionary>